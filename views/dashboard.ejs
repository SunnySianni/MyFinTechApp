<%- include('partials/header') %>

<section class="container my-4">
    <section class="row g-4">
        <section class="col-md-6">
            <section class="card">
                <section class="card-body">
                    <h3 class="card-title">Account Balance</h3>
                    <h2 class="display-4" id="balance">$<%= parseFloat(user.balance).toFixed(2) %></h2>
                </section>
            </section>
        </section>
        
        <section class="col-md-6">
            <section class="card">
                <section class="card-body">
                    <h3 class="card-title">Quick Transaction</h3>
                    <form id="transactionForm">
                        <section class="mb-3">
                            <label class="form-label">Transaction Type</label>
                            <select class="form-select" id="transactionType" required>
                                <option value="deposit">Deposit</option>
                                <option value="withdrawal">Withdrawal</option>
                            </select>
                        </section>
                        <section class="mb-3">
                            <label class="form-label">Amount</label>
                            <input type="number" class="form-control" id="amount" step="0.01" min="0.01" required>
                        </section>
                        <section class="mb-3">
                            <label class="form-label">Description</label>
                            <input type="text" class="form-control" id="description" required>
                        </section>
                        <button type="submit" class="btn btn-primary">Submit Transaction</button>
                    </form>
                </section>
            </section>
        </section>

        <section class="col-12">
            <section class="card">
                <section class="card-body">
                    <h3 class="card-title">Recent Transactions</h3>
                    <section class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Type</th>
                                    <th>Amount</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody id="recentTransactions">
                                <% transactions.forEach(function(transaction) { %>
                                <tr>
                                    <td><%= new Date(transaction.createdAt).toLocaleString() %></td>
                                    <td><%= transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1) %></td>
                                    <td>$<%= parseFloat(transaction.amount).toFixed(2) %></td>
                                    <td><%= transaction.description %></td>
                                </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </section>
                </section>
            </section>
        </section>
    </section>
</section>

<script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>

<script>
  // Socket.io implementation
  const socket = io();

  // Listen for 'balanceUpdate' events
  socket.on('balanceUpdate', (data) => {
    const balanceElement = document.getElementById('balance');
    balanceElement.textContent = `$${parseFloat(data.newBalance).toFixed(2)}`;
  });

  // Listen for 'newTransaction' events
  socket.on('newTransaction', (transaction) => {
    const transactionsTable = document.getElementById('recentTransactions');
    const newRow = transactionsTable.insertRow(0);
    
    newRow.innerHTML = `
      <td>${new Date(transaction.createdAt).toLocaleString()}</td>
      <td>${transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1)}</td>
      <td>$${parseFloat(transaction.amount).toFixed(2)}</td>
      <td>${transaction.description}</td>
    `;

    // Remove the last row if there are more than 5 transactions
    if (transactionsTable.rows.length > 5) {
      transactionsTable.deleteRow(transactionsTable.rows.length - 1);
    }
  });
</script>

<script>
  // Dashboard functionality
  document.addEventListener('DOMContentLoaded', () => {
    const transactionForm = document.getElementById('transactionForm');
    const balanceElement = document.getElementById('balance');

    transactionForm.addEventListener('submit', async (e) => {
      e.preventDefault();

      const type = document.getElementById('transactionType').value;
      const amount = document.getElementById('amount').value;
      const description = document.getElementById('description').value;

      try {
        const response = await fetch('/api/transaction', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ type, amount, description }),
        });

        if (!response.ok) {
          throw new Error('Transaction failed');
        }

        const data = await response.json();

        // Update balance
        balanceElement.textContent = `$${parseFloat(data.balance).toFixed(2)}`;

        // Clear form
        transactionForm.reset();

        // Show success message
        alert('Transaction successful!');

      } catch (error) {
        console.error('Error:', error);
        alert('Transaction failed. Please try again.');
      }
    });
  });
</script>

<%- include('partials/footer') %>