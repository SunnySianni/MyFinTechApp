<%- include('partials/header') %>

<section class="container my-4">
    <section class="row">
        <section class="col-12">
            <section class="card">
                <section class="card-body">
                    <h2 class="card-title">Transaction History</h2>
                    
                    <!-- Filter buttons -->
                    <section class="btn-group mb-3" role="group">
                        <button type="button" class="btn btn-outline-primary active" data-filter="all">All</button>
                        <button type="button" class="btn btn-outline-success" data-filter="deposit">Deposits</button>
                        <button type="button" class="btn btn-outline-danger" data-filter="withdrawal">Withdrawals</button>
                    </section>

                    <!-- Search input -->
                    <section class="mb-3">
                        <input type="text" id="searchInput" class="form-control" placeholder="Search transactions...">
                    </section>

                    <!-- Date range filter -->
                    <section class="mb-3 row">
                        <div class="col-md-6">
                            <label for="startDate" class="form-label">Start Date</label>
                            <input type="date" id="startDate" class="form-control">
                        </div>
                        <div class="col-md-6">
                            <label for="endDate" class="form-label">End Date</label>
                            <input type="date" id="endDate" class="form-control">
                        </div>
                    </section>

                    <!-- Transactions table -->
                    <section class="table-responsive">
                        <table class="table" id="transactionsTable">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Type</th>
                                    <th>Amount</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% transactions.forEach(function(transaction) { %>
                                <tr data-type="<%= transaction.type %>">
                                    <td><%= new Date(transaction.createdAt).toLocaleString() %></td>
                                    <td><%= transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1) %></td>
                                    <td>$<%= parseFloat(transaction.amount).toFixed(2) %></td>
                                    <td><%= transaction.description %></td>
                                </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </section>

                    <!-- Pagination -->
                    <nav aria-label="Transaction history pagination">
                        <ul class="pagination justify-content-center" id="pagination">
                            <!-- Pagination will be dynamically populated by JavaScript -->
                        </ul>
                    </nav>
                </section>
            </section>
        </section>
    </section>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const table = document.getElementById('transactionsTable');
    const tbody = table.querySelector('tbody');
    const filterButtons = document.querySelectorAll('[data-filter]');
    const searchInput = document.getElementById('searchInput');
    const startDateInput = document.getElementById('startDate');
    const endDateInput = document.getElementById('endDate');
    const paginationContainer = document.getElementById('pagination');
    const rowsPerPage = 10;
    let currentPage = 1;

    // Filter transactions
    function filterTransactions() {
        const activeFilter = document.querySelector('[data-filter].active').dataset.filter;
        const searchTerm = searchInput.value.toLowerCase();
        const startDate = new Date(startDateInput.value);
        const endDate = new Date(endDateInput.value);

        Array.from(tbody.children).forEach(row => {
            const type = row.dataset.type;
            const text = row.textContent.toLowerCase();
            const date = new Date(row.children[0].textContent);

            const matchesFilter = activeFilter === 'all' || type === activeFilter;
            const matchesSearch = text.includes(searchTerm);
            const matchesDateRange = (!startDate || date >= startDate) && (!endDate || date <= endDate);

            row.style.display = matchesFilter && matchesSearch && matchesDateRange ? '' : 'none';
        });

        updatePagination();
    }

    // Update pagination
    function updatePagination() {
        const visibleRows = Array.from(tbody.children).filter(row => row.style.display !== 'none');
        const pageCount = Math.ceil(visibleRows.length / rowsPerPage);

        paginationContainer.innerHTML = '';
        for (let i = 1; i <= pageCount; i++) {
            const li = document.createElement('li');
            li.className = `page-item ${i === currentPage ? 'active' : ''}`;
            li.innerHTML = `<a class="page-link" href="#">${i}</a>`;
            li.addEventListener('click', (e) => {
                e.preventDefault();
                currentPage = i;
                showPage(i);
                updatePagination();
            });
            paginationContainer.appendChild(li);
        }

        showPage(currentPage);
    }

    // Show specific page
    function showPage(page) {
        const visibleRows = Array.from(tbody.children).filter(row => row.style.display !== 'none');
        const startIndex = (page - 1) * rowsPerPage;
        const endIndex = startIndex + rowsPerPage;

        visibleRows.forEach((row, index) => {
            row.style.display = (index >= startIndex && index < endIndex) ? '' : 'none';
        });
    }

    // Event listeners
    filterButtons.forEach(button => {
        button.addEventListener('click', () => {
            filterButtons.forEach(btn => btn.classList.remove('active'));
            button.classList.add('active');
            filterTransactions();
        });
    });

    searchInput.addEventListener('input', filterTransactions);
    startDateInput.addEventListener('change', filterTransactions);
    endDateInput.addEventListener('change', filterTransactions);

    // Initial setup
    filterTransactions();
});
</script>

<%- include('partials/footer') %>